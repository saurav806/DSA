//Link:- https://leetcode.com/problems/combinations/

class Solution {
public:
    void btrack(int start,int n,int k,vector<vector<int>>&ans,vector<int>&vect){
        if(k==0){
            ans.push_back(vect);
            return;
        }
        for(int i=start; i<=n;i++){
            vect[vect.size()-k] = i;
            btrack(i+1,n,k-1,ans,vect);
        }
        
    }
    vector<vector<int>> combine(int n, int k) {
        vector<vector<int>>ans;
        vector<int>vect(k);
        btrack(1,n,k,ans,vect);
        return ans;
    }
};
